define

	################
	## ATTRIBUTES ##
	################

	### SCN attributes

	scenario_id sub attribute,
		datatype long;
	
	num_rays sub attribute,
		datatype long;
		
	### Common DEPTH attribute

	depth sub attribute,
		datatype long; #integer values only
	

	### Bottom attributes 
	
	bottom_type sub attribute,
		datatype long;
	
	length sub attribute,
		datatype double;
		
	slope sub attribute,
		datatype long;
		
	### SSP attributes
	
	SSP_value sub attribute, 
		datatype double,
		has depth;
		
	season sub attribute,
		datatype string;
	
	location sub attribute,
		datatype string;

	#SSP_grad sub attribute,
	#	datatype double;
		
	#mean_SSP sub attribute,
	#	datatype double;
		
	#stdev_SSP sub attribute,
	#	datatype double;
	
	#mean_grad sub attribute,
	#	datatype double;
		
	#stdev_grad sub attribute,
	#	datatype double;
	
	
	### Duct\Channel attributes 
	
	SLD_avgrad sub attribute,
		datatype double;
	
	DC_avgrad_top sub attribute,
		datatype double;
		
	DC_avgrad_bot sub attribute,
		datatype double;
	# TODO: Goes with duct-exists and could be removed
	number_of_ducts sub attribute,
		datatype long;
		

	################
	##  ENTITIES  ##
	################
		
	sound-propagation-scenario sub entity,
		has scenario_id, #key
		plays defined_by_bathy,
		plays defined_by_src,
		plays defined_by_SSP,
		plays converged_scenario;
		
		
	ray-input sub entity,
		has num_rays, #key
		plays convergence_minimum;
		#plays hard_convergence,
		#plays easy_convergence;
	
	bottom-segment-1 sub entity,
		has length,
		has depth,
		plays define_bathy,
		plays bathy_src_position;
		#plays start_segment;
		#plays adverse_mode;

	bottom-segment-2 sub entity,
		has length,
		has depth,
		plays define_bathy;
		#plays end_segment;
	
	wedge-segment sub entity,
		has length,
		has slope,
		plays define_bathy;
		#plays is_wedge;
		#plays adverse_mode;
	
	source sub entity,
		has depth,
		plays define_src,
		plays bathy_src_position;
		#plays supporting_src_pos;

	SSP-vec sub entity,
		has season,
		has location,
		#has mean_SSP,
		#has stdev_SSP,
		#has mean_grad,
		#has stdev_grad,
		has SSP_value,
		has depth,
		plays define_SSP,
		plays find_channel;
		#has SSP_grad,
		
	sonic-layer sub entity,
		has SLD_avgrad,
		has depth,
		plays channel_exists;
		#plays supporting_mode;

		
	deep-channel sub entity,
		has depth, #3 depths: DC_ax, DC_top, DC_bot
		has DC_avgrad_top,
		has DC_avgrad_bot,
		plays channel_exists;
		#plays supporting_mode;
		
	# Check if this can be removed or replaced by a more meaningful information. Added to fix the query;
	#match($ssp, $y) SSP-channel, $y has attribute $b
	
	duct-exists sub entity,
		has number_of_ducts, 
		plays channel_count;
		
	#################
	##  RELATIONS  ##
	#################
	
	convergence sub relation,
		relates converged_scenario,
		relates convergence_minimum;
		#kgcn stuff
		#has probability-exists,
		#has probability-non-exists,
		#has probability-preexists;
	
	bathymetry sub relation,
		relates defined_by_bathy,
		relates define_bathy,
		has bottom_type;

		
	src-position sub relation,
		relates defined_by_src,
		relates define_src,
		relates bathy_src_position;
		
		
	sound-speed sub relation,
		relates defined_by_SSP,
		relates define_SSP;
	
	SSP-channel sub relation,
		relates find_channel,
		relates channel_exists,
		relates channel_count;	
	
	#################
	##    RULES    ##
	#################
		
	#duct-propagation-sld sub rule,
	#when {
	#	$sld isa sonic-layer, has SLD_avgrad, has depth; 
	#	$ssp isa SSP-vec;
	#}, then {
	#	(channel_exists: $sld, find_channel: $ssp) isa SSP-channel;
	#};
	#
	#duct-propagation-DC sub rule,
	#when {
	#	$dc isa deep-channel;
	#	$ssp isa SSP-vec;
	#}, then {
	#	(channel_exists: $dc, find_channel: $ssp) isa SSP-channel;
	#};
		

		
	

	
	
		
	
	
	
	
		
		
		
		
		
	
		

	
		

	
	
	
	