    # === Convergence ===
    conv, scn, ray, nray, src, dsrc, seg, dseg, l, s, srcp, bathy, bt, ssp, loc, ses,\
    sspval, dsspmax, speed, dssp, dct, ddct, dt, gd, duct, nod = 'conv','scn','ray', 'nray',\
    'src', 'dsrc', 'seg', 'dseg','l','s','srcp','bathy','bt','ssp','loc','ses',\
    'sspval','dsspmax','speed','dssp','dct','ddct','dt','gd','duct','nod'
    
    convergence_query = inspect.cleandoc(
        f'''match 
        $scn isa sound-propagation-scenario, has scenario_id {scenario_idx};'''
        '''$ray isa ray-input, has num_rays $nray; 
        $src isa source, has depth $dsrc; 
        $seg isa bottom-segment, has depth $dseg, has length $l, has slope $s;
        $conv(converged_scenario: $scn, minimum_resolution: $ray) isa convergence;
        $srcp(defined_by_src: $scn, define_src: $src) isa src-position;
        $bathy(defined_by_bathy: $scn, define_bathy: $seg) isa bathymetry, has bottom_type $bt;
        $ssp isa SSP-vec, has location $loc, has season $ses, has SSP_value $sspval, has depth $dsspmax;
        $sspval has depth $dssp;
        $dct isa duct, has depth $ddct, has duct_type $dt, has grad $gd; 
        {$dssp == $dsrc;} or {$dssp == $dseg;} or {$dssp == $ddct;} or {$dssp == $dsspmax;};
        $speed(defined_by_SSP: $scn, define_SSP: $ssp) isa sound-speed;
        $duct(find_channel: $ssp, channel_exists: $dct) isa SSP-channel, has number_of_ducts $nod; 
        get;'''
        )
    
match $scn isa sound-propagation-scenario, has scenario_id 440;$ray isa ray-input, has num_rays $nray; $src isa source, has depth $dsrc; $seg isa bottom-segment, has depth $dseg, has length $l, has slope $s; $conv(converged_scenario: $scn,minimum_resolution:$ray) isa convergence;$srcp(defined_by_src: $scn, define_src:$src) isa src-position;$bathy(defined_by_bathy: $scn, define_bathy: $seg) isa bathymetry, has bottom_type $bt;$ssp isa SSP-vec, has location $loc, has season $ses, has SSP_value $sspval, has depth $dsspmax; $sspval has depth $dssp;$dct isa duct, has depth $ddct, has duct_type $dt, has grad $gd; {$dssp == $dsrc;} or {$dssp == $dseg;} or {$dssp == $ddct;} or {$dssp == $dsspmax;};$speed(defined_by_SSP: $scn,define_SSP: $ssp) isa sound-speed;$duct(find_channel: $ssp, channel_exists: $dct) isa SSP-channel, has number_of_ducts $nod; get; offset 0; limit 100;
